openapi: 3.1.0
info:
  title: Zote
  version: 0.1.0-SNAPSHOT
paths:
  /health:
    get:
      tags:
      - health
      description: health
      operationId: health
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /notes:
    get:
      tags:
      - notes
      description: getAll
      operationId: getAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteHeader'
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - notes
      description: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /notes/{id}:
    get:
      tags:
      - notes
      description: getById
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: 'Invalid value for: path parameter id'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - notes
      description: update
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: 'Invalid value for: path parameter id, Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - notes
      description: delete
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: ''
        '400':
          description: 'Invalid value for: path parameter id'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /persons:
    get:
      tags:
      - persons
      description: getAll
      operationId: getAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - persons
      description: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /persons/{id}:
    get:
      tags:
      - persons
      description: getById
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: 'Invalid value for: path parameter id'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - persons
      description: update
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: 'Invalid value for: path parameter id, Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - persons
      description: delete
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: ''
        '400':
          description: 'Invalid value for: path parameter id, Invalid value for: query
            parameter force'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /label:
    get:
      tags:
      - label
      description: getAll
      operationId: getAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - label
      description: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
  /label/{id}:
    get:
      tags:
      - label
      description: getById
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          description: 'Invalid value for: path parameter id'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - label
      description: update
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelForm'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          description: 'Invalid value for: path parameter id, Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - label
      description: delete
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: ''
        '400':
          description: 'Invalid value for: path parameter id, Invalid value for: query
            parameter force'
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: ''
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Label:
      title: Label
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    LabelForm:
      title: LabelForm
      type: object
      required:
      - name
      properties:
        name:
          type: string
    Note:
      title: Note
      type: object
      required:
      - header
      - message
      properties:
        header:
          $ref: '#/components/schemas/NoteHeader'
        message:
          type: string
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/NotePerson'
        parentNote:
          $ref: '#/components/schemas/NoteHeader'
        childrenNotes:
          type: array
          items:
            $ref: '#/components/schemas/NoteHeader'
    NoteForm:
      title: NoteForm
      type: object
      required:
      - title
      - message
      - status
      properties:
        title:
          type: string
        message:
          type: string
        status:
          $ref: '#/components/schemas/NoteStatus'
        assignees:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/NotePersonForm'
        parentId:
          type: integer
          format: int64
        labels:
          type: array
          uniqueItems: true
          items:
            type: integer
            format: int64
    NoteHeader:
      title: NoteHeader
      type: object
      required:
      - id
      - title
      - status
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        status:
          $ref: '#/components/schemas/NoteStatus'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    NotePerson:
      title: NotePerson
      type: object
      required:
      - person
      - owner
      properties:
        person:
          $ref: '#/components/schemas/Person'
        owner:
          type: boolean
    NotePersonForm:
      title: NotePersonForm
      type: object
      required:
      - personId
      - owner
      properties:
        personId:
          type: integer
          format: int64
        owner:
          type: boolean
    NoteStatus:
      title: NoteStatus
      type: string
      enum:
      - Complete
      - Draft
      - Ongoing
    Person:
      title: Person
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PersonForm:
      title: PersonForm
      type: object
      required:
      - name
      properties:
        name:
          type: string
